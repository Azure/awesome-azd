name: PR Template Validator

on:
  pull_request:
    types: [opened, synchronize, reopened]
    paths:
      - 'website/static/templates.json'

permissions:
  pull-requests: write
  contents: read
  issues: write

jobs:
  validate-template:
    name: Validate Template Changes
    runs-on: ubuntu-latest
    steps:
      - name: Checkout PR
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm
          cache-dependency-path: website/package-lock.json

      - name: Install website dependencies
        working-directory: website
        run: npm ci

      - name: Install script dependencies
        working-directory: .github/scripts
        run: npm install

      - name: Get changed files
        id: changed-files
        run: |
          git fetch origin ${{ github.base_ref }}
          echo "files=$(git diff --name-only origin/${{ github.base_ref }}...HEAD)" >> $GITHUB_OUTPUT

      - name: Validate template changes
        id: validate
        if: contains(steps.changed-files.outputs.files, 'website/static/templates.json')
        run: |
          node .github/scripts/validate-templates.js
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          PR_NUMBER: ${{ github.event.pull_request.number }}
          BASE_REF: ${{ github.base_ref }}
          HEAD_REF: ${{ github.head_ref }}

      - name: Run template tests
        if: contains(steps.changed-files.outputs.files, 'website/static/templates.json')
        working-directory: website
        run: npm test

      - name: Assign reviewer for manual testing
        if: contains(steps.changed-files.outputs.files, 'website/static/templates.json')
        uses: actions/github-script@v7
        with:
          script: |
            const assignee = 'v-xuto';
            try {
              await github.rest.issues.addAssignees({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: context.issue.number,
                assignees: [assignee]
              });
              console.log(`Successfully assigned ${assignee} for manual testing`);
            } catch (error) {
              console.log(`Could not assign ${assignee}: ${error.message}`);
              // Post comment instead if assignment fails
              await github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: context.issue.number,
                body: `@${assignee} Please review and manually test this template submission.`
              });
            }
